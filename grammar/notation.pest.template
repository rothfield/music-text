// Music-Text Grammar - Generated from Template
// DO NOT EDIT THIS FILE DIRECTLY - Edit grammar/notation.pest.template instead
// Generated by: scripts/generate_grammar.js

// ============================================================================
// SHARED RULES (system-independent)
// ============================================================================

// Removed automatic WHITESPACE rule to handle spaces explicitly
COMMENT = _{ "(*" ~ (!"*)" ~ ANY)* ~ "*)" }

// Explicit whitespace rules
ws = _{ " " | "\t" }
ws_opt = _{ ws* }
ws_req = _{ ws+ }

// Main entry point - auto-detect notation system
document = { 
    SOI ~ (newline | ws)* ~
    (attribute_section ~ newline*)? ~
    (staves_section)? ~
    (newline | ws)* ~ EOI 
}

// ============================================================================
// ATTRIBUTES SECTION (key: C, time: 4/4, author: John, etc.)
// ============================================================================

attribute_section = {
    attribute_line ~ (newline ~ attribute_line)*
}

attribute_line = {
    attribute_key ~ ":" ~ attribute_value
}

attribute_key = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
attribute_value = @{ (!newline ~ ANY)+ }

// ============================================================================
// STAVES SECTION (generic for auto-detection)
// ============================================================================

staves_section = {
    stave ~ (empty_line+ ~ stave)*
}

stave = {
    upper_line* ~
    content_line ~
    lower_line* ~
    lyrics_line*
}

// ============================================================================
// CONTENT LINE (generic for auto-detection)
// ============================================================================

content_line = {
    line_number? ~
    barline? ~
    measure ~ (barline ~ measure)* ~
    barline? ~
    newline?
}

line_number = { ASCII_DIGIT+ ~ ")" }

measure = {
    ws_opt ~ (beat ~ (ws_req ~ beat)*)? ~ ws_opt
}

// ============================================================================
// BEATS (generic for auto-detection)
// ============================================================================

beat = {
    simple_beat
}

// Simple beats - consecutive characters, no spaces allowed inside (most common)
simple_beat = {
    beat_item+
}

// Note: Delimited beats with <> syntax are deprecated
// Beat grouping is now handled via overlines in lower_annotation_line

beat_item = {
    pitch | dash | begin_slur | end_slur | breath_mark
}

// ============================================================================
// MUSICAL ELEMENTS (generic definitions)
// ============================================================================

pitch = {
    sargam_pitch | number_pitch | western_pitch | abc_pitch | doremi_pitch
}

// Note extension
dash = { "-" }

// Slur markers
begin_slur = { "(" }
end_slur = { ")" }

// Breath mark
breath_mark = { "'" }

// ============================================================================
// BARLINES
// ============================================================================

barline = {
    reverse_final_barline |
    final_barline |
    double_barline |
    left_repeat |
    right_repeat |
    single_barline
}

reverse_final_barline = { "[|" }
final_barline = { "|]" }
double_barline = { "||" }
left_repeat = { "|:" }
right_repeat = { ":|" }
single_barline = { "|" ~ !"|" ~ !"]" ~ !":" }

// ============================================================================
// NOTATION SYSTEMS (pitch definitions - these will be included in all grammars)
// ============================================================================

// Sargam notation (Indian classical): S R G M P D N
sargam_pitch = {
    ("S" | "R" | "G" | "M" | "P" | "D" | "N" |
     "s" | "r" | "g" | "m" | "p" | "d" | "n") ~
    flat_or_sharp?
}

// Number notation: 1 2 3 4 5 6 7
number_pitch = {
    ASCII_DIGIT ~ flat_or_sharp?
}

// Western notation: C D E F G A B
western_pitch = {
    ("C" | "D" | "E" | "F" | "G" | "A" | "B") ~
    flat_or_sharp?
}

// ABC notation (similar to western but different context)
abc_pitch = {
    ("C" | "D" | "E" | "F" | "G" | "A" | "B" |
     "c" | "d" | "e" | "f" | "g" | "a" | "b") ~
    flat_or_sharp?
}

// Doremi notation (moveable do): d r m f s l t
doremi_pitch = {
    ("d" | "r" | "m" | "f" | "s" | "l" | "t" |
     "D" | "R" | "M" | "F" | "S" | "L" | "T") ~
    flat_or_sharp?
}

flat_or_sharp = { "#" | "b" }

// ============================================================================
// UPPER/LOWER ANNOTATION LINES
// ============================================================================

upper_line = {
    !content_line ~ !lyrics_line ~ upper_line_item+ ~ newline
}

upper_line_item = {
    upper_line_dot |
    tala |
    ornament |
    chord |
    mordent |
    upper_line_two_dots |
    ending |
    slur |
    " "+
}

lower_line = {
    !content_line ~ !lyrics_line ~ lower_line_item+ ~ newline
}

lower_line_item = {
    lower_line_dot |
    lower_line_two_dots |
    kommal_indicator |
    beat_grouping |
    " "+
}

// Octave markers
upper_line_dot = { "." | "*" }
upper_line_two_dots = { ":" }
lower_line_dot = { "." | "*" }
lower_line_two_dots = { ":" }

// Ornaments (pitch sequences above notes)
ornament = {
    "<" ~ ornament_pitch+ ~ ">" |
    ornament_pitch+
}

ornament_pitch = { pitch }

// Tala markers
tala = { "+" | ASCII_DIGIT }

// Chord notation
chord = { "[" ~ chord_content ~ "]" }
chord_content = @{ (ASCII_ALPHANUMERIC | " ")* }

// Mordent
mordent = { "~" }

// Flat indicator (for Bhatkande notation)
kommal_indicator = { "_" }

// Slur (2 or more underscores in upper line)
slur = { "__" ~ "_"* }

// Beat grouping (2 or more underscores in lower line)
beat_grouping = { "__" ~ "_"* }

// Endings (1.---, 2.___)
ending = @{ ASCII_DIGIT ~ ("." | "_")+ }

// ============================================================================
// LYRICS
// ============================================================================

lyrics_line = {
    !content_line ~ syllable ~ (" "+ ~ syllable)* ~ newline
}

syllable = @{
    (ASCII_ALPHA | "'" | "!" | "-")+
}

// ============================================================================
// SYSTEM-SPECIFIC DOCUMENTS (generated from template)
// ============================================================================

{{SYSTEM_SPECIFIC_RULES}}

// ============================================================================
// BASIC TOKENS
// ============================================================================

newline = _{ "\r\n" | "\n" }
empty_line = _{ " "* ~ newline }